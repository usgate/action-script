name: build ios

on:
  workflow_dispatch:
    inputs:
      method:
        type: choice
        description: '打包方式(development/ad-hoc/app-store)'
        required: true
        default: 'development'
        options:
          - development
          - ad-hoc
          - app-store
      environment:
        type: choice
        description: 'api环境(develop/production)'
        required: true
        default: 'develop'
        options:
          - develop
          - production

jobs:
  build_ios:
    runs-on: macos-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release
      environment: ${{ github.event.inputs.environment }}
      description: "正式站"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: setup env
        run: |
          chmod +x .github/script/setup-env.sh
          source .github/script/setup-env.sh ${{ github.event.inputs.method }} ${{ github.event.inputs.environment }} ${{ secrets.MAPBOX_ACCESS_TOKEN }}

      - name: Prepare for build
        run: |
          KEYCHAIN_PASSWORD="${{ secrets.KEYCHAIN_PASSWORD }}"
          SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"
          APP_GIT_URL="${{ secrets.APP_GIT_URL }}"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-add ~/.ssh/id_rsa
          GIT_CURL_VERBOSE=1 git clone "$APP_GIT_URL"
          # 截取仓库名
          repo_name=$(basename "$APP_GIT_URL" .git)
          mv "$repo_name"/* .
          chmod +x ci/ios/script/init-cert.sh
          # 执行脚本安装证书
          source ci/ios/script/init-cert.sh ${{ github.event.inputs.method }} ${{ env.environment }}

      - name: Cache Flutter packages
        uses: actions/cache@v2
        with:
          path: ${{ env.HOME }}/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache CocoaPods dependencies
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('**/Podfile.lock') }}

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      - name: Restore packages
        run: |
          echo export PUB_HOSTED_URL=https://pub.flutter-io.cn
          echo export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
          flutter pub get

      - name: pod repo update
        run: pod repo update

      - name: Build Flutter
        run: flutter build ios --release --no-codesign

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme ${{ env.SHEME }} -configuration ${{ env.BUILD_CONFIGURATION }}

      - name: Build xArchive
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace -scheme ${{ env.SHEME }} -configuration ${{ env.BUILD_CONFIGURATION }} DEVELOPMENT_TEAM=$TEAM_ID_APP -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=$PROVISIONING_PROFILE_APP clean archive CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY_APP"

      - name: Export ipa
        run: |
          xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist
          cd build-output/ios
          ls
          cd ../..

      - name: upload to pgyer
        uses: usgate/pgyer-upload-app-action@v1.3.2
        with:
          _api_key: ${{ secrets.PGY_KEY }}
          appFilePath: build-output/ios/duidui.ipa
          buildUpdateDescription: "${{ env.description }} - ${{ github.event.inputs.method }} (自动发布)"
